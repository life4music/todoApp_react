{"version":3,"sources":["components/Task.js","components/TaskList.js","components/AddTask.js","components/App.js","index.js"],"names":["Task","props","task","id","title","date","important","active","finishDate","style","color","onClick","change","delete","finish","Date","toLocaleString","TaskList","tasks","filter","done","length","sort","a","b","toLowerCase","activeTasks","map","doneTasks","className","fontSize","slice","AddTask","minDate","toISOString","state","text","checked","handleDate","e","setState","target","value","handleText","handleCheckbox","handleClick","add","alert","maxDate","this","type","name","placeholder","onChange","htmlFor","min","max","Component","App","counter","deleteTask","index","findIndex","splice","console","log","changeStatus","forEach","getTime","addTask","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bcf75e6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Task = (props) => {\r\n  const { id, title, date, important, active, finishDate } = props.task;\r\n\r\n  if (active) {\r\n    return (\r\n      <div>\r\n        <p>\r\n          <strong style={important ? { color: \"red\" } : { color: \"black\" }}>\r\n            {title}\r\n          </strong>\r\n          - do <span>{date} </span>\r\n          <button onClick={() => props.change(id)}>Zostało zrobione</button>\r\n          <button onClick={() => props.delete(id)}>X</button>\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    const finish = new Date(finishDate).toLocaleString();\r\n    return (\r\n      <div>\r\n        <p>\r\n          <strong>{title}</strong> <em>(do {date})</em>\r\n          <br />- zrealizowane: <span>{finish} </span>\r\n          <button onClick={() => props.delete(id)}>X</button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = (props) => {\r\n  const active = props.tasks.filter((task) => task.active);\r\n  const done = props.tasks.filter((task) => !task.active);\r\n\r\n  // sortowanie listy\r\n  if (done.length >= 2) {\r\n    // po dacie malejąco\r\n    done.sort((a, b) => b.finishDate - a.finishDate);\r\n  }\r\n  if (active.length >= 2) {\r\n    // po nazwie roznąco\r\n    active.sort((a, b) => {\r\n      a = a.title.toLowerCase();\r\n      b = b.title.toLowerCase();\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n  const activeTasks = active.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      change={props.change}\r\n    />\r\n  ));\r\n\r\n  const doneTasks = done.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      change={props.change}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <h2>Zadania do zrobienia</h2>\r\n        {activeTasks.length > 0 ? activeTasks : \"Brak zadań do zrobienia\"}\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"done\">\r\n        <h2>\r\n          Zadania zrobione <em>({done.length})</em>\r\n        </h2>\r\n        {done.length > 3 && (\r\n          <span style={{ fontSize: 11 }}>\r\n            Wyświetlone jedynie 3 ostatnie elementy\r\n          </span>\r\n        )}\r\n        {doneTasks.slice(0, 3)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\r\nimport \"./AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n  minDate = new Date().toISOString().slice(0, 10);\r\n\r\n  state = {\r\n    text: \"\",\r\n    checked: false,\r\n    date: this.minDate,\r\n  };\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { text, checked, date } = this.state;\r\n\r\n    if (text.length > 2) {\r\n      const add = this.props.add(text, date, checked);\r\n      if (add) {\r\n        this.setState({\r\n          text: \"\",\r\n          checked: false,\r\n          date: this.minDate,\r\n        });\r\n      }\r\n    } else {\r\n      alert(\"Za krótka nazwa zadania\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const maxDate = `${this.minDate.slice(0, 4) * 1 + 1}-12-31`;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={this.state.text}\r\n            placeholder=\"dodaj zadanie\"\r\n            onChange={this.handleText}\r\n          />\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"important\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          <label htmlFor=\"important\">Priorytet</label>\r\n          <br />\r\n          <label htmlFor=\"date\">Do kiedy zrobić</label>\r\n          <input\r\n            type=\"date\"\r\n            value={this.state.date}\r\n            min={this.minDate}\r\n            max={maxDate}\r\n            onChange={this.handleDate}\r\n          />\r\n          <button onClick={this.handleClick}>DODAJ</button>\r\n        </div>\r\n        <hr />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskList from \"./TaskList\";\nimport AddTask from \"./AddTask\";\n\nclass App extends Component {\n  counter = 4;\n  state = {\n    tasks: [\n      {\n        id: 0,\n        title: \"Zacząć ćwiczyć\",\n        date: \"2021-06-12\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 1,\n        title: \"Wyleczyć zęba\",\n        date: \"2021-03-05\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 2,\n        title: \"Urządzić kuchnię\",\n        date: \"2021-10-30\",\n        important: false,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 3,\n        title: \"Dokończyć tatuaż\",\n        date: \"2021-04-01\",\n        important: false,\n        active: true,\n        finishDate: null,\n      },\n    ],\n  };\n\n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex((task) => task.id === id);\n    tasks.splice(index, 1);\n    // tasks = tasks.filter((task) => task.id !== id);\n    this.setState({\n      tasks,\n    });\n    console.log(tasks);\n  };\n\n  changeStatus = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    });\n    this.setState({\n      tasks,\n    });\n  };\n\n  addTask = (title, date, important) => {\n    const task = {\n      id: this.counter,\n      title,\n      date,\n      important,\n      active: true,\n      finishDate: null,\n    };\n\n    this.setState((prevState) => ({\n      tasks: [...prevState.tasks, task],\n    }));\n\n    this.counter++;\n    return true;\n  };\n\n  render() {\n    return (\n      <>\n        <AddTask add={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          delete={this.deleteTask}\n          change={this.changeStatus}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}